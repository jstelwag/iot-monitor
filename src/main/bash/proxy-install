#!/bin/bash
# Proxy server (apache)
echo Installing AWS S3 cli
sudo apt-get -qq install awscli
aws configure

echo installing apache and php
sudo apt-get -qq install apache2 php php-curl php-gd php-mbstring php-xml php-xmlrpc libapache2-mod-php php-mysql
sudo a2enmod rewrite
sudo a2enmod ssl
sudo a2enmod proxy
sudo a2enmod proxy_http
sudo a2enmod proxy_balancer
sudo a2enmod lbmethod_byrequests

echo Install letsencrypt
sudo add-apt-repository -y ppa:certbot/certbot
sudo apt-get -qq update
sudo apt-get -qq install certbot

cat <<EOF>> /tmp/options-ssl-apache.conf
# This file contains important security parameters. If you modify this file manually, Certbot will be unable to automatically provide future security updates.
# Instead, Certbot will print and log an error message with a path to the up-to-date file that you will need to refer to when manually updating this file.
SSLEngine on

# Intermediate configuration, tweak to your needs
SSLProtocol	all -SSLv2 -SSLv3
SSLCipherSuite	ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
SSLHonorCipherOrder	on
SSLCompression	off

SSLOptions +StrictRequire
# Add vhost name to log entries:
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"" vhost_combined
LogFormat "%v %h %l %u %t \"%r\" %>s %b" vhost_common
EOF

sudo mv /tmp/options-ssl-apache.conf /etc/letsencrypt/

sudo rm /var/www/html/index.html
echo loading websites and configuration from s3
sudo aws s3 sync s3://automated-proxy-backup/www.kasteelnijswiller.nl /var/www/html/www.kasteelnijswiller.nl
sudo aws s3 sync s3://automated-proxy-backup/www.schlosshotel-aachen.de /var/www/html/www.schlosshotel-aachen.de
sudo chown -R www-data:www-data /var/www

sudo rm /etc/apache2/sites-enabled/000-default.conf
sudo aws s3 sync s3://automated-proxy-backup/sites-enabled /etc/apache2/sites-enabled
sudo aws s3 sync s3://automated-proxy-backup/letsencrypt-live /etc/letsencrypt/live

cat <<EOF>> /tmp/backup.sh
#!/bin/bash
# backup script
aws s3 sync --delete /var/www/html s3://automated-proxy-backup
aws s3 sync --delete /etc/apache2/sites-enabled s3://automated-proxy-backup/sites-enabled
sudo aws s3 sync --delete /etc/letsencrypt/live s3://automated-proxy-backup/letsencrypt-live
exit 0
EOF
sudo mv /tmp/backup.sh /usr/local/bin
sudo chmod +x /usr/local/bin/backup.sh
(crontab -l 2>/dev/null; echo "0 2 * * * /usr/local/bin/backup.sh") | crontab -

echo installing pagespeed
wget https://dl-ssl.google.com/dl/linux/direct/mod-pagespeed-stable_current_amd64.deb
sudo dpkg -i mod-pagespeed-stable*.deb
wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
sudo service apache2 restart

exit 0


